plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "signing"
    id "java-library"
    id "groovy"
    id "maven-publish"
}

repositories {
    mavenCentral()
    maven {
        setUrl("https://plugins.gradle.org/m2/")
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}
var projectVersion = version.toString()

if (hasProperty("snapshot") && !projectVersion.endsWith("-SNAPSHOT")) {
    projectVersion += "-SNAPSHOT"
} else if (hasProperty("release") && projectVersion.endsWith("-SNAPSHOT")) {
    projectVersion = projectVersion.replace("-SNAPSHOT", "")
}


java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly(gradleApi())
    implementation("io.github.gradle-nexus:publish-plugin:1.1.0")
    implementation("org.jacoco:org.jacoco.report:0.8.8")
    implementation("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3")
    implementation('org.springframework.boot:spring-boot-gradle-plugin:2.7.5')
    implementation('org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20')
    implementation('org.jetbrains.kotlin:kotlin-allopen:1.7.20')
    implementation("com.google.cloud.tools.jib:com.google.cloud.tools.jib.gradle.plugin:3.2.1")
}


if (hasProperty("ossrhUsername")) {

    ext["ossrhUsername"] = property("ossrhUsername")
    ext["ossrhPassword"] = property("ossrhPassword")
    ext["sonatypeStagingProfileId"] = ""
    ext["signing.keyId"] = property("signing.keyId")
    ext["signing.password"] = property("signing.password")
    ext["signing.secretKeyRingFile"] = property("signing.secretKeyRingFile")

    project.publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                pom {
                    name.set("foundation-gradle-plugin")
                    description.set("A set of gradle plugins for Foundation")
                    url.set("https://github.com/soffalabs/foundation-gradle-plugin")
                    version = projectVersion
                    licenses {
                        license {
                            name.set("Apache License 2.0")
                            url.set("https://www.apache.org/licenses/LICENSE-2.0")
                        }
                    }
                    developers {
                        developer {
                            id.set("soffalabs")
                            name.set("SOFFA")
                            email.set("noreply@soffa.dev")
                        }
                    }
                    scm {
                        connection.set("scm:git:git://soffalabs/foundation-gradle-plugin.git")
                        developerConnection.set("scm:git:ssh://soffalabs/foundation-gradle-plugin.git")
                        url.set("https://github.com/soffalabs/foundation-gradle-plugin")
                    }
                }
            }
        }
    }

    nexusPublishing {
        repositories {
            sonatype {
                // stagingProfileId.set(System.getenv("SONATYPE_STAGING_PROFILE_ID"))
                username.set("${property("ossrhUsername")}")
                password.set("${property("ossrhPassword")}")
                nexusUrl.set(new URI("https://s01.oss.sonatype.org/service/local/"))
                snapshotRepositoryUrl.set(new URI("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            }
        }
    }

    signing {
        sign(publishing.publications["maven"])
    }

} else {

    project.publishing {
        publications {
            maven(MavenPublication) {
                from project.components.java
                pom {
                    name.set("SOFFA Gradle Plugin")
                    description.set("A gradle plugin with useful plugins.")
                    url.set("https://github.com/soffalabs/foundation-gradle-plugin")
                    version = projectVersion
                    licenses {
                        license {
                            name.set("Apache License 2.0")
                            url.set("https://www.apache.org/licenses/LICENSE-2.0")
                        }
                    }
                    developers {
                        developer {
                            id.set("soffalabs")
                            name.set("SOFFA")
                            email.set("noreply@soffa.io")
                        }
                    }
                    scm {
                        connection.set("scm:git:git://soffalabs/foundation-gradle-plugin.git")
                        developerConnection.set("scm:git:ssh://soffalabs/foundation-gradle-plugin.git")
                        url.set("https://github.com/soffalabs/foundation-gradle-plugin")
                    }
                }
            }
        }
        repositories {
            maven {
                setUrl(System.getenv("MAVEN_PUBLISHING_URL"))
                credentials {
                    username = System.getenv("MAVEN_PUBLISHING_USER")
                    password = System.getenv("MAVEN_PUBLISHING_PASSWORD")
                }
            }
        }
    }
}
